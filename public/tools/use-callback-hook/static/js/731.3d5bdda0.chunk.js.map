{"version":3,"file":"static/js/731.3d5bdda0.chunk.js","mappings":"wKAEA,SAASA,EAAMC,GAAqB,IAApB,SAACC,EAAQ,QAACC,GAAQF,EAC9B,MAAOG,EAAUC,IAAcC,EAAAA,EAAAA,WAAS,GASxC,OAPAC,EAAAA,EAAAA,YAAU,KACNF,GAAW,GACXG,YAAW,KACPH,GAAW,EAAM,GACnB,IAAK,GACT,CAACF,IAEAC,GACQK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAR,SAAE,SAELO,EAAAA,EAAAA,KAAA,UAAQN,QAASA,EAAQD,SAAEA,GACvC,CAEA,SAAeS,EAAAA,EAAAA,MAAKX,GCMpB,QArBA,WACI,MAAOY,EAAMC,IAAYP,EAAAA,EAAAA,UAAS,IAC3BQ,EAAIC,IAAUT,EAAAA,EAAAA,UAAS,GAS9B,OAAQG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAR,UACJc,EAAAA,EAAAA,MAAA,OAAAd,SAAA,EACIO,EAAAA,EAAAA,KAAA,SAAOQ,MAAOH,EAAKI,SAAUC,GAAGJ,EAAOK,SAASD,EAAEE,OAAOJ,QAASK,KAAK,YACvEb,EAAAA,EAAAA,KAACT,EAAM,CAACG,QAPEoB,KACdV,GAASD,GAAOA,EAAME,GAAI,EAMKZ,SAAC,MAC3BU,GACDH,EAAAA,EAAAA,KAACT,EAAM,CAACG,QAZEqB,KACdX,GAASD,GAAOA,EAAME,GAAI,EAWKZ,SAAC,UAGxC,C","sources":["counter-without-use-callback/button.js","counter-without-use-callback/app.js"],"sourcesContent":["import { memo, useEffect, useState } from \"react\";\n\nfunction Button({children,onClick}){\n    const [isPending,setPending] = useState(true);\n\n    useEffect(()=>{\n        setPending(true)\n        setTimeout(()=>{\n            setPending(false)\n        },1000)\n    },[onClick]);\n\n    if(isPending){\n        return <>...</>;\n    }\n    return (<button onClick={onClick}>{children}</button>);\n}\n\nexport default memo(Button);","import { useState } from \"react\";\nimport Button from \"./button\";\n\nfunction App(){\n    const [count,setCount] = useState(0);\n    const [inc,setInc] = useState(1);\n\n    const increment = ()=> {\n        setCount(count=>count+inc);\n    };\n    const decrement = () => {\n        setCount(count=>count-inc);\n    };\n\n    return (<>\n        <div>\n            <input value={inc} onChange={e=>setInc(parseInt(e.target.value))} type=\"number\"/>\n            <Button onClick={decrement}>-</Button>\n            {count}\n            <Button onClick={increment}>+</Button>\n        </div>\n    </>);\n}\n\nexport default App;"],"names":["Button","_ref","children","onClick","isPending","setPending","useState","useEffect","setTimeout","_jsx","_Fragment","memo","count","setCount","inc","setInc","_jsxs","value","onChange","e","parseInt","target","type","decrement","increment"],"sourceRoot":""}